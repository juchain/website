apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'

group = 'com.bootdo'

description = """blockshine-website"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task wrapper(type: Wrapper){
    gradleVersion = '4.4.1'
}

applicationDefaultJvmArgs=["-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5505"]


[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

mainClassName="com.bootdo.BootdoApplication"

buildscript{
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url "http://repo.maven.apache.org/maven2" }
    }
    dependencies {
        //使用1.4.2.RELEASE版本的Spring框架
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.6.RELEASE")
    }

}

repositories {

    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    maven { url "http://repo.maven.apache.org/maven2" }
}

dependencies {
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter', version: '1.5.6.RELEASE') {
        exclude(module: 'commons-logging')
    }
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: '1.5.6.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.5.6.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: '1.5.6.RELEASE'
    compile group: 'net.sourceforge.nekohtml', name: 'nekohtml', version: '1.9.22'
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.43'
    compile group: 'org.mybatis', name: 'mybatis', version: '3.4.4'
    compile group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '1.1.1'
    compile group: 'com.alibaba', name: 'druid', version: '1.0.28'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.6'
    compile group: 'commons-configuration', name: 'commons-configuration', version: '1.10'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile group: 'org.apache.shiro', name: 'shiro-core', version: '1.3.2'
    compile group: 'org.apache.shiro', name: 'shiro-spring', version: '1.3.2'
    compile group: 'org.apache.shiro', name: 'shiro-ehcache', version: '1.3.2'
    compile group: 'com.github.theborakompanioni', name: 'thymeleaf-extras-shiro', version: '1.2.1'
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.31'
    compile group: 'org.apache.velocity', name: 'velocity', version: '1.7'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-cache', version: '1.5.6.RELEASE'
    compile group: 'net.sf.ehcache', name: 'ehcache', version: '2.10.4'
    compile(group: 'org.quartz-scheduler', name: 'quartz', version: '2.2.1') {
        exclude(module: 'slf4j-api')
    }
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-websocket', version: '1.5.6.RELEASE'
    compile group: 'org.springframework', name: 'spring-context-support', version: '4.3.10.RELEASE'
    compile group: 'org.activiti', name: 'activiti-engine', version: '5.22.0'
    compile group: 'org.activiti', name: 'activiti-spring', version: '5.22.0'
    compile group: 'org.activiti', name: 'activiti-modeler', version: '5.22.0'
    compile group: 'org.activiti', name: 'activiti-diagram-rest', version: '5.22.0'
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.6.1'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.6.1'
    compile group: 'org.jsoup', name: 'jsoup', version: '1.9.2'
    compile group: 'org.crazycake', name: 'shiro-redis', version: '2.4.2.1-RELEASE'
    	compile group: 'org.tuckey', name: 'urlrewritefilter', version: '4.0.4'

    compile fileTree(dir:'libs',include:['*.jar'])
    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.5.6.RELEASE') {
        exclude(module: 'commons-logging')
    }
}

def env = System.getProperty("env") ?: "dev"

jar{
    doFirst {
        copy {
            from "build/resources/main/env/${env}"
            into "build/resources/main"
        }
        delete("build/resources/main/env")
    }
}

compileJava(){
    println("env:[${env}]")
    doLast {
        copy {
            from "build/resources/main/env/${env}"
            into "build/resources/main"
        }
        delete("build/resources/main/env")
    }
}
